Grading at Sat May 16 18:42:56 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==371== Memcheck, a memory error detector
==371== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==371== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==371== Command: ./tester h.txt d.txt
==371== Parent PID: 370
==371== 
==371== Invalid write of size 8
==371==    at 0x400F2A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==371==    by 0x400D43: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==371==    by 0x400B10: read_input (in /graderhome/work/c4prj2_input/tester)
==371==    by 0x401CEF: main (test-input.c:69)
==371==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==371== 
==371== 
==371== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==371==  Access not within mapped region at address 0x0
==371==    at 0x400F2A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==371==    by 0x400D43: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==371==    by 0x400B10: read_input (in /graderhome/work/c4prj2_input/tester)
==371==    by 0x401CEF: main (test-input.c:69)
==371==  If you believe this happened as a result of a stack
==371==  overflow in your program's main thread (unlikely but
==371==  possible), you can try to increase the size of the
==371==  main thread stack using the --main-stacksize= flag.
==371==  The main thread stack size used in this run was 8388608.
==371== 
==371== HEAP SUMMARY:
==371==     in use at exit: 824 bytes in 13 blocks
==371==   total heap usage: 20 allocs, 7 frees, 5,088 bytes allocated
==371== 
==371== LEAK SUMMARY:
==371==    definitely lost: 0 bytes in 0 blocks
==371==    indirectly lost: 0 bytes in 0 blocks
==371==      possibly lost: 0 bytes in 0 blocks
==371==    still reachable: 824 bytes in 13 blocks
==371==         suppressed: 0 bytes in 0 blocks
==371== Rerun with --leak-check=full to see details of leaked memory
==371== 
==371== For counts of detected and suppressed errors, rerun with: -v
==371== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==377== Memcheck, a memory error detector
==377== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==377== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==377== Command: ./tester i1 i2
==377== Parent PID: 376
==377== 
==377== Invalid write of size 8
==377==    at 0x400F2A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==377==    by 0x400D43: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==377==    by 0x400B10: read_input (in /graderhome/work/c4prj2_input/tester)
==377==    by 0x401CEF: main (test-input.c:69)
==377==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==377== 
==377== 
==377== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==377==  Access not within mapped region at address 0x0
==377==    at 0x400F2A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==377==    by 0x400D43: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==377==    by 0x400B10: read_input (in /graderhome/work/c4prj2_input/tester)
==377==    by 0x401CEF: main (test-input.c:69)
==377==  If you believe this happened as a result of a stack
==377==  overflow in your program's main thread (unlikely but
==377==  possible), you can try to increase the size of the
==377==  main thread stack using the --main-stacksize= flag.
==377==  The main thread stack size used in this run was 8388608.
==377== 
==377== HEAP SUMMARY:
==377==     in use at exit: 776 bytes in 10 blocks
==377==   total heap usage: 14 allocs, 4 frees, 4,920 bytes allocated
==377== 
==377== LEAK SUMMARY:
==377==    definitely lost: 0 bytes in 0 blocks
==377==    indirectly lost: 0 bytes in 0 blocks
==377==      possibly lost: 0 bytes in 0 blocks
==377==    still reachable: 776 bytes in 10 blocks
==377==         suppressed: 0 bytes in 0 blocks
==377== Rerun with --leak-check=full to see details of leaked memory
==377== 
==377== For counts of detected and suppressed errors, rerun with: -v
==377== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
